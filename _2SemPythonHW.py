#Специализация Тестировщик

#1 - Напишите программу, которая принимает на вход вещественное число и показывает сумму его цифр. 
#Учтите, что числа могут быть отрицательными

#Пример:

#67.82 -> 23
#0.56 -> 11

num = input('input number') 
num=num.replace('.','') #если число дробное делаем функцию с точкой и выделяем её кавычками. Далее ставим кавычки с пробелом,
#преобразовывая в целое число
num_abs = abs(num) #Если число отрицательное, это не влияет на сумму его цифр. 
#В таком случае достаточно будет использовать встроенную в Python функции abc(), 
#которая возвращает абсолютное значение переданного ей аргумента.
num=int(num)
sum = 0
while num != 0:
    sum = sum + num % 10 #23%10=3
    num = num // 10#2
print(f'sum=: {sum}')#print('sum = ',sum)

#2 - Напишите программу, которая принимает на вход число N и выдает набор произведений (набор - это список) чисел от 1 до N.
#Не используйте функцию math.factorial.
#Добавьте проверку числа N: чтобы пользователь не мог ввести буквы.

#Пример:
#- пусть N = 4, тогда [ 1, 2, 6, 24 ] (1, 1*2, 1*2*3, 1*2*3*4)

#Разобрать данный код:
#def f(n):
#    return 1 if n == 0 else n * f(n - 1)

n = int(input('Input number n'))
 
factorial = 1
 
for i in range(2, n+1): #двойка, потому что единицу мы уже учли
    factorial *= i # *= Оператор *= сначала умножает значение выражения (справа от оператора)
    #на значение переменной или свойства (слева от оператора). 
    #Затем оператор назначает результат этой операции переменной или свойству.
 
print(factorial)


n = int(input("Введите число n")) 
f = 1

while n > 1:
    f = f * n
    n = n - 1 # от обратного, так как n у нас больше единицы
print(f)

n = int(input("Введите число n")) 
f = 1

for i in range(2, n+1):
    f = f * i
print(f)
 
#можно ли как вариант написать ,что  f это digit, чтобы не делать проверку?

#3.Задайте список из n чисел последовательности $(1+\frac 1 n)^n$ и выведите на экран их сумму.

n = int(input('Enter number: ')) 

def sequence(n):

    return[round((1 + 1 / x)**x, 2) for x in range (1, n + 1)]   
        
print(sequence(n))
print(round(sum(sequence(n))))


#Специализация Программирование

#3 - Палиндромом называется слово, которое в обе стороны читается одинаково: "шалаш", "кабак".
#А еще есть палиндром числа - смысл также в том, чтобы число в обе стороны читалось одинаково, но есть одно "но".
#Если перевернутое число не равно исходному, то они складываются и проверяются на палиндром еще раз.
#Это происходит до тех пор, пока не будет найден палиндром.
#Напишите такую программу, которая найдет палиндром введенного пользователем числа.

#num = 0;
#pos = 0;

#while num != 0:
    
#    digit = num % 10 #определить последнюю цифру числа
    #num = [] #уменьшить число на 1 цифру или задать от нуля до 10

    
    #new_num = new_num * 10 + digit #увеличить новое число на 1 цифру


#4 - Реализуйте выдачу случайного числа
#не использовать random.randint и вообще библиотеку random
#Можете использовать xor, биты, библиотеку time или datetime (миллисекунды или наносекунды) - для задания случайности
#Учтите, что есть диапазон: от(минимальное) и до (максимальное)
